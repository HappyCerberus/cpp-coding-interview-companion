#include "catch2/catch_test_macros.hpp"
#include "sudoku.h"
#include <algorithm>

TEST_CASE("Validate Solutions") {
  std::vector<std::vector<char>> puzzle1{
      {'1', ' ', ' ', ' ', '7', '2', ' ', ' ', ' '},
      {'7', '8', '5', ' ', '6', '9', '4', '3', ' '},
      {' ', '3', '2', ' ', '8', '4', '1', '6', '7'},
      {' ', ' ', ' ', '8', '1', ' ', '3', '2', ' '},
      {' ', ' ', '8', '4', ' ', ' ', ' ', '7', '9'},
      {'5', ' ', ' ', ' ', '3', ' ', ' ', ' ', ' '},
      {' ', '9', '3', ' ', '4', ' ', ' ', ' ', ' '},
      {' ', ' ', ' ', '7', ' ', ' ', '9', ' ', ' '},
      {'4', '5', ' ', ' ', ' ', ' ', ' ', '1', '3'}};

  std::vector<std::vector<char>> puzzle2{
      {'7', '3', '4', ' ', '9', ' ', ' ', ' ', ' '},
      {' ', ' ', '5', ' ', '3', '1', '4', ' ', ' '},
      {' ', ' ', ' ', ' ', ' ', '7', ' ', '3', '8'},
      {' ', '4', '2', ' ', '1', '9', ' ', '8', '7'},
      {'5', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
      {' ', '9', '7', ' ', ' ', ' ', ' ', ' ', ' '},
      {'9', ' ', '6', '1', '7', ' ', '3', '4', ' '},
      {'8', '5', ' ', ' ', ' ', ' ', ' ', '2', ' '},
      {' ', ' ', ' ', '6', ' ', ' ', ' ', ' ', ' '}};
  std::vector<std::vector<char>> puzzle3{
      {'7', '3', '4', '8', '9', '5', '1', '6', '2'},
      {'6', '8', '5', '2', '3', '1', '4', '7', '9'},
      {'2', '1', '9', '4', '6', '7', '5', '3', '8'},
      {'3', '4', '2', '5', '1', '9', '6', '8', '7'},
      {'5', '6', '8', '7', '2', '4', '9', '1', '3'},
      {'1', '9', '7', '3', '8', '6', '2', '5', '4'},
      {'9', '2', '6', '1', '7', '8', '3', '4', '5'},
      {'8', '5', '1', '9', '4', '3', '7', '2', '6'},
      {'4', '7', '3', '6', '5', '2', '9', ' ', ' '}};

  REQUIRE(solve(puzzle1));
  REQUIRE(solve(puzzle2));
  REQUIRE(!solve(puzzle3));

  std::vector<std::vector<char>> solution1{
      {'1', '4', '6', '3', '7', '2', '8', '9', '5'},
      {'7', '8', '5', '1', '6', '9', '4', '3', '2'},
      {'9', '3', '2', '5', '8', '4', '1', '6', '7'},
      {'6', '7', '9', '8', '1', '5', '3', '2', '4'},
      {'3', '1', '8', '4', '2', '6', '5', '7', '9'},
      {'5', '2', '4', '9', '3', '7', '6', '8', '1'},
      {'8', '9', '3', '2', '4', '1', '7', '5', '6'},
      {'2', '6', '1', '7', '5', '3', '9', '4', '8'},
      {'4', '5', '7', '6', '9', '8', '2', '1', '3'}};
  std::vector<std::vector<char>> solution2{
      {'7', '3', '4', '8', '9', '5', '1', '6', '2'},
      {'6', '8', '5', '2', '3', '1', '4', '7', '9'},
      {'2', '1', '9', '4', '6', '7', '5', '3', '8'},
      {'3', '4', '2', '5', '1', '9', '6', '8', '7'},
      {'5', '6', '8', '7', '2', '4', '9', '1', '3'},
      {'1', '9', '7', '3', '8', '6', '2', '5', '4'},
      {'9', '2', '6', '1', '7', '8', '3', '4', '5'},
      {'8', '5', '1', '9', '4', '3', '7', '2', '6'},
      {'4', '7', '3', '6', '5', '2', '8', '9', '1'}};

  REQUIRE(std::ranges::equal(puzzle1, solution1));
  REQUIRE(std::ranges::equal(puzzle2, solution2));
}